--- Portfile.orig	2023-09-20 19:26:42
+++ Portfile	2024-01-03 06:38:40
@@ -2,7 +2,6 @@
 
 PortSystem              1.0
 PortGroup               github 1.0
-PortGroup               qt5 1.0
 PortGroup               cmake 1.1
 PortGroup               active_variants 1.1
 PortGroup               compiler_blacklist_versions 1.0
@@ -15,51 +14,25 @@
 description             a library for reading and writing images
 long_description        OpenImageIO is a library for reading and writing images, and a bunch of \
                         related classes, utilities, and applications.
+platforms               darwin
 
-# Pin the used version before macOS 11, which is required by pinned versions
-# of opencolorio and osl.
-if {${os.platform} eq "darwin" && ${os.major} >= 20} {
-    set port_latest     yes
-} else {
-    set port_latest     no
-}
+github.setup        OpenImageIO oiio 2.4.17.0 v
+revision            100
+checksums           rmd160  e593d35b8a4d62c0277622267c43911836eebd61 \
+                    sha256  7fe81d8e5bce30cc4a212f020ac3cc4344e6b7c1c0842475e3a048515099c65c \
+                    size    47900800
 
-if {${port_latest}} {
-    github.setup        OpenImageIO oiio 2.4.5.0 v
-    revision            8
-    checksums           rmd160  32b2b0f0b01268a91fc98cfca948a71e89d8e54b \
-                        sha256  21177a9665021a99123885cd8383116d15013b6610b4b09bcf209612423fedc5 \
-                        size    31938357
-} else {
-    github.setup        OpenImageIO oiio 2.1.20.0 v
-    revision            13
-    checksums           rmd160  d10c488b93ab2335d53545d8a1b35ba4c1babb98 \
-                        sha256  75222543286d3a12473aa03fdb4e6c9f98760c5ad1ad89d3cf82a5da41385ae0 \
-                        size    29115990
-
-    livecheck.type      none
-}
-
 github.tarball_from     archive
 
-if {${port_latest}} {
-    patchfiles-append   patch-enforce-clang14.diff
-    patchfiles-append   patch-2.4.5-cmake-disable-wall-werror.diff
+depends_lib-append  port:imath \
+                    port:openexr
 
-    depends_lib-append  port:imath \
-                        port:openexr
-} else {
-    patchfiles-append   patch-FindOpenJpeg.cmake.diff
-    patchfiles-append   patch-libraw-0.21.0.diff
-    patchfiles-append   patch-2.1.20-cmake-disable-wall-werror.diff
+patchfiles-append oiio-2.0.8-invalidatespec.patch
+patchfiles-append oiio-2.0.8-atomic-load.patch
+patchfiles-append oiio-2.3.20-strnlen.patch
+patchfiles-append oiio-2.4.6-sysutil.patch
+patchfiles-append oiio-2.4.6-filesystem.patch
 
-    depends_lib-append  port:field3d \
-                        port:openexr2
-
-    configure.pkg_config_path-prepend \
-                        ${prefix}/libexec/openexr2/lib/pkgconfig
-}
-
 # error: multiple overloads of 'address' instantiate to the same signature 'const_pointer (const_reference) const noexcept'
 # http://lists.llvm.org/pipermail/llvm-bugs/2013-November/031552.html
 # Seen on OSX 10.9 and older.
@@ -101,12 +74,79 @@
                         port:squish \
                         port:${port_libfmt}
 
+# we need gcc atomics (clang >= 3.5 maybe?, gcc >= 4.8 works)
+# tested with openimageio 1.4.6rc1:
+# macports-clang-3.3 and later work
+# gcc-4.2 doesn't work
+# llvm-gcc-4.2 doesn't work
+# macports-clang < 3.3 untested
+# clang < 300 doesn't work
+# see also https://github.com/OpenImageIO/oiio/issues/1363
+compiler.blacklist-append {*gcc-3*} {*gcc-4.[0-1]} {macports-gcc-4.[2-7]} {gcc-4.[2-7]} {apple-gcc-4.[2-7]} cc {clang < 300}
+
+# for some reason, if we compile oiio with gcc 4.9 and boost with gcc 4.2, idiff a.png b.png crashes
+if {${configure.cxx_stdlib} eq "libstdc++"} {
+    if {[vercmp $xcodeversion 3.0] >= 0} {
+        compiler.fallback-append macports-clang-3.4
+    } else {
+        compiler.fallback-append macports-clang-3.3
+    }
+}
+
+# GCC < 4.9 does not have proper GCC intrinsics support
+compiler.blacklist-append {*gcc-4.8}
+#compiler.whitelist-append macports-clang-9.0 macports-clang-8.0 macports-clang-7.0 macports-clang-6.0 macports-clang-5.0 macports-clang-4.0 macports-gcc-7 macports-gcc-6 macports-gcc-5 {*gcc-4.9}
+
+# The PowerPC build requires GCC >= 4.9, which doesn't recognize the -arch flag, and requires libatomic
+# Unfortunately, the resulting binaries don't work (at least on PPC), so we build without threads
+if {${configure.build_arch} eq "ppc" || ${configure.build_arch} eq "ppc64"} {
+    # there is no known working clang compiler for ppc
+    compiler.blacklist-append {macports-clang*}
+#    # the following removes the flag "-arch ppc" put by cmake-1.0 portgroup in the pre-configure phase
+#    pre-configure {
+#        configure.args-delete -DCMAKE_OSX_ARCHITECTURES="${configure.build_arch}"
+#    }
+#    ## -latomic is necessary on ppc for __atomic_fetch_add_8 and __atomic_exchange_8
+#    configure.args-append -DCMAKE_SHARED_LINKER_FLAGS=-latomic -DCMAKE_EXE_LINKER_FLAGS=-latomic
+    # env PATH=/opt/local/libexec/qt4/bin:$PATH cmake .. -DNOTHREADS=ON -DCMAKE_BUILD_TYPE=Debug -DSTOP_ON_WARNING=OFF
+    configure.args-append -DNOTHREADS=ON -DSTOP_ON_WARNING=OFF
+    ## uncomment the following to compile with buggy thread support
+    # env PATH=/opt/local/libexec/qt4/bin:$PATH cmake .. -DCMAKE_C_COMPILER=gcc-mp-4.9 -DCMAKE_CXX_COMPILER=g++-mp-4.9 -DCMAKE_SHARED_LINKER_FLAGS=-latomic -DCMAKE_EXE_LINKER_FLAGS=-latomic -DCMAKE_BUILD_TYPE=Debug -DSTOP_ON_WARNING=OFF
+    ## -latomic is necessary on ppc for __atomic_fetch_add_8 and __atomic_exchange_8
+    #configure.args-append -DCMAKE_SHARED_LINKER_FLAGS=-latomic -DCMAKE_EXE_LINKER_FLAGS=-latomic
+}
+
+configure.args-append \
+    -DOIIO_BUILD_TESTS:BOOL=FALSE \
+    -DBOOST_ROOT=${prefix} \
+    -DUSE_QT:BOOL=FALSE \
+    -DUSE_PYTHON:BOOL=FALSE \
+    -DUSE_PYTHON3:BOOL=FALSE \
+    -DUSE_FIELD3D:BOOL=FALSE \
+    -DUSE_FFMPEG:BOOL=FALSE \
+    -DUSE_OPENJPEG:BOOL=FALSE \
+    -DUSE_OCIO:BOOL=FALSE \
+    -DUSE_OPENCV:BOOL=FALSE \
+    -DUSE_OPENSSL:BOOL=FALSE \
+    -DUSE_FREETYPE:BOOL=FALSE \
+    -DUSE_GIF:BOOL=TRUE \
+    -DUSE_HEIF:BOOL=TRUE \
+    -DUSE_PTEX:BOOL=FALSE \
+    -DUSE_LIBRAW:BOOL=TRUE \
+    -DUSE_OPENGL:BOOL=FALSE \
+    -DUSE_WEBP:BOOL=TRUE \
+    -DBUILD_FMT_FORCE:BOOL=TRUE \
+    -DSTOP_ON_WARNING:BOOL=FALSE
+
 # optional components
 
-#configure.args-append   -DUSE_OPENGL=OFF \
-#                        -DUSE_QT=OFF
-qt5.min_version         5.6
+default_variants    +opencolorio +openjpeg +freetype
 
+variant natron conflicts ffmpeg qt5 dicom openvdb ptex dicom requires opencolorio openjpeg freetype description {Natron version} {
+    if {${configure.cxx_stdlib} eq "libstdc++"} {
+    }
+}
+
 configure.args-append   -DUSE_PYTHON=OFF
 
 set pythons_suffixes    {27 36 37 38 39 310 311}
@@ -147,26 +187,46 @@
 }
 
 #configure.args-append       -DUSE_FFMPEG=OFF
+variant ffmpeg description {Add FFmpeg support.} {
 depends_lib-append          path:lib/libavcodec.dylib:ffmpeg
+    configure.args-delete       -DUSE_FFMPEG:BOOL=FALSE
+    configure.args-append       -DUSE_FFMPEG:BOOL=TRUE
+}
 
 #configure.args-append       -DUSE_JPEGTURBO=OFF
 depends_lib-append          path:include/turbojpeg.h:libjpeg-turbo \
 
 #configure.args-append       -DUSE_OPENJPEG=OFF
+variant openjpeg description {Add OpenJPEG support.} {
 depends_lib-append          port:openjpeg
 configure.args-append       -DOpenJpeg_ROOT=${prefix}
+    configure.args-delete       -DUSE_OPENJPEG:BOOL=FALSE
+    configure.args-append       -DUSE_OPENJPEG:BOOL=TRUE -DOPENJPEG_HOME=${prefix} -DOPENJPEG_INCLUDE_DIR=`pkg-config --variable=includedir libopenjp2`
+}
 
 #configure.args-append       -DUSE_OCIO=OFF
+variant opencolorio description {Add OpenColorIO support.} {
 depends_lib-append          port:opencolorio
+    configure.args-delete       -DUSE_OCIO:BOOL=FALSE
+    configure.args-append       -DUSE_OCIO:BOOL=TRUE
+}
 
 #configure.args-append       -DUSE_OPENCV=OFF
+variant opencv description {Use OpenCV.} {
 set opencv_ver 4
 depends_lib-append          path:lib/opencv${opencv_ver}/libopencv_core.dylib:opencv${opencv_ver}
 configure.args-append       -DOpenCV_INCLUDE_DIR=${prefix}/include/opencv${opencv_ver} \
                             -DOpenCV_ROOT=${prefix}/lib/opencv${opencv_ver}
+    configure.args-delete -DUSE_OPENCV:BOOL=FALSE
+    configure.args-append -DUSE_OPENCV:BOOL=TRUE
+}
 
 #configure.args-append       -DUSE_FREETYPE=OFF
+variant freetype description {Use FreeType.} {
 depends_lib-append          port:freetype
+    configure.args-delete -DUSE_FREETYPE:BOOL=FALSE
+    configure.args-append -DUSE_FREETYPE:BOOL=TRUE -DFREETYPE_INCLUDE_DIRS=${prefix}/include/freetype2
+}
 
 #configure.args-append       -DUSE_GIF=OFF
 depends_lib-append          port:giflib
@@ -175,15 +235,25 @@
 depends_lib-append          port:libheif
 
 #configure.args-append       -DUSE_PTEX=OFF
+variant ptex description {Use PTex.} {
 depends_lib-append          port:ptex
+    configure.args-delete -DUSE_PTEX:BOOL=FALSE
+    configure.args-append -DUSE_PTEX:BOOL=TRUE
+}
 
 #configure.args-append       -DUSE_LIBRAW=OFF
 depends_lib-append          port:libraw
 
 #configure.args-append       -DUSE_TBB=OFF \
 #                            -DUSE_OPENVDB=OFF
+variant openvdb description {Use OpenVDB.} {
 depends_lib-append          port:tbb \
                             port:openvdb
+    configure.args-delete -DUSE_TBB:BOOL=FALSE
+    configure.args-append -DUSE_TBB:BOOL=TRUE
+    configure.args-delete -DUSE_OPENVDB:BOOL=FALSE
+    configure.args-append -DUSE_OPENVDB:BOOL=TRUE
+}
 
 configure.args-append       -DTBB_ROOT=${prefix}/libexec/tbb
 
@@ -191,7 +261,11 @@
 configure.args-append       -DUSE_NUKE=OFF
 
 #configure.args-append       -DUSE_DICOM=OFF
+variant dicom description {Use DICOM from dcmtk.} {
 depends_lib-append          port:dcmtk
+    configure.args-delete -DUSE_DICOM:BOOL=FALSE
+    configure.args-append -DUSE_DICOM:BOOL=TRUE
+}
 
 #configure.args-append       -DUSE_WEBP=OFF
 depends_lib-append          port:webp
